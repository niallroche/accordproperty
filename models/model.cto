/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /**
  * this model represents elements of the Standard Conditions of Sale (5th edition) contract from  the UK Law Society * * * governing rules around house purchase in the UK
  * see https://www.lawsociety.org.uk/support-services/documents/standard-conditions-of-sale-5th-edition/ for full details
  */
  
namespace org.accordproject.realestate.residential.uk.shortformsales

import org.accordproject.cicero.contract.* from https://models.accordproject.org/cicero/contract.cto
import org.accordproject.cicero.runtime.* from https://models.accordproject.org/cicero/runtime.cto
import org.accordproject.time.* from https://models.accordproject.org/v2.0/time.cto
import org.accordproject.money.MonetaryAmount from https://models.accordproject.org/money.cto
import org.accordproject.address.PostalAddress from https://models.accordproject.org/address.cto
      
transaction MyRequest extends Request {
  o String input
}

transaction MyResponse extends Response {
  o String output
}

enum PropertyType {
  o Leasehold
  o Freehold
}

enum TitleType {
  o Full
  o Limited
}

/**
 * The template model
 */
asset ResidentialSalesContract extends AccordContract {

  /**
  * Buyer and seller details
  */
 	o AccordParty seller
	o AccordParty buyer

	o PostalAddress sellerAddress
  o PostalAddress buyerAddress

  /** 
  * Property details
  */
  o String propertyName
  /**
  * Land Registry Title number
   */
  o String titleNumber
  o TitleType titleType

  /** 
  * freehold/leasehold related 
  */
  o PropertyType freeholdLeasehold
  o String demisedByTheLease
  o DateTime leaseDate

  /** 
  * chatels may need to be an array or it's own type as per incumbances later 
  */
  o String chattels
  o MonetaryAmount chattelsPrice

  /**
  * Mortgage related
  */
  //o Boolean isMortgaged
  o DateTime mortgateDate
  // using a String for the moment
  o String buyerMortgageChargeNumber

  /**
  * Purchase price related
  */
  //o MonetaryAmount purchasePrice
  o Double purchasePrice
  o MonetaryAmount depositAmount
 
  /** 
  * Agreement and completion dates 
  */
  o DateTime agreementDate
  o DateTime completionDate

  /**
  * law society rate as defined in 1.1.1(a) 
  * the money at interest on seven days' notice of withdrawal with a clearing bank less,
  * in either case, any proper charges for handling the money
  */
  o Double contractRate
}

/**
* Transaction definitions
*/

// Request
transaction ResidentialSalesRequest extends Request {
  o AccordParty seller
	o AccordParty buyer

	o PostalAddress sellerAddress
  o PostalAddress buyerAddress

  o String propertyName
  o String titleNumber
  o String freeholdLeasehold
  //o Boolean isFreehold
  //o String isFreehold

  o String demisedByTheLease
  o DateTime leaseDate
  o String chattels
  o MonetaryAmount chattelsPrice

  //o Boolean hasMortgage
  o DateTime mortgateDate
  o String buyerMortgageChargeNumber
  o MonetaryAmount depositAmount
  o MonetaryAmount purchasePrice
	o DateTime agreementDate
	//o String more

  o MonetaryAmount compensationPaidToSeller
  o MonetaryAmount compensationPaidToBuyer

  o DateTime defaultPeriodSeller
  o DateTime defaultPeriodBuyer

  /** 5.1.3 */
  o MonetaryAmount repairCosts
  /** need to add compensation amount here potentially */
}

// Response
transaction ResidentialSalesResponse extends Response {
}

transaction SaleCompletionRequest extends Request {
  /**
   * What was the agreed delivery date for the goods?
   */
  o DateTime agreedDepositDate

  /**
   * When the deposit has been received
   */
  //o DateTime depositReceivedAt optional
  o DateTime depositReceivedAt

  /**
   * The BOE interest rate for the penalty to be paid by the buyer if late
   * defined in 1.1.1 t(e) and set by the Law Society
   */
  o Double contractRate

  /** the identifier for this matter */
  o String caseRef
}

transaction SaleCompletionResponse extends Response {
    /**
   * The penalty to be paid by the seller
   */
  o Double penalty

  o Duration daysLate

  /**
   * Whether the buyer may terminate the contract 
   */
  o Boolean buyerMayTerminate

    /**
   * Whether the seller may terminate the contract 
   */
  o Boolean sellerMayTerminate

  /** the identifier for this matter */
  o String caseRef
}

transaction LatePaymentNotificationRequest extends Request {
 /** the identifier for this matter */
  o String caseRef

    /** law Society interest rate applicable */
  o Double lawSocietyInterestRate 
}

transaction LatePaymentNotificationResponse extends Response {
  o Boolean sellerMayTerminate
  o Boolean buyerMayTerminate
}

transaction LateCompletionRequest extends Request {
   /** the identifier for this matter */
  o String caseRef

  /** law Society interest rate applicable */
  o Double lawSocietyInterestRate 
}

transaction LateCompletionResponse extends Response {
  o Double penalty
  o Long daysLate
  o Boolean sellerMayTerminate
  o Boolean buyerMayTerminate
    /** law Society interest rate applied */
  o Double lawSocietyInterestRateApplied 
}

transaction NoticeToCompleteRequest extends Request {
 /** the identifier for this matter */
  o String caseRef
}

transaction NoticeToCompleteResponse extends Response {
  o Boolean sellerMayTerminate
  o Boolean buyerMayTerminate
}

transaction SellerRecindsRequest extends Request {
   /** the identifier for this matter */
  o String caseRef
}

transaction SellerRecindsResponse extends Response {
   /** the penalty */
   o Double totalPenalty
}

transaction SellerNotVacatedNotificationRequest extends Request {
   /** the identifier for this matter */
  o String caseRef
}

transaction SellerNotVacatedNotificationResponse extends Response {
   /** the penalty */
   o Double totalPenalty
}

/**
* State definitions
*/

/** 
* both Buyer and Seller can be in default at the same time, so we need two states
 */
enum ContractStatus {
  o SellerRecinds
  o NoticeToComplete
  o InDefault
}

enum DefaultStatus {
  o SellerInDefault
  o BuyerInDefault
}

asset PropertyPurchaseState identified by caseRef {
  o String caseRef
  o ContractStatus status
  o DefaultStatus buyerDefaultStatus
  o DefaultStatus sellerDefaultStatus
  o Double apportionmentsTotal
  o Double apportionmentsPaid
  o Double balanceRemaining
  o Double totalPenaltyAmount
  o Duration totalPenaltyDays
	o Double totalCompensationPaidToBuyer
  o Double totalCompensationPaidToSeller
  o Integer totalDefaultDaysBuyer
  o Integer totalDefaultDaySeller
  o DateTime completionDate
}

/**
* Payment obligation definitions
*/
event PaymentObligation {
  o String from
	o String to
	o Double amount
}